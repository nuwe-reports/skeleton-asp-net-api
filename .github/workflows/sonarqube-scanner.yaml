on:
  push:
    branches:
      - main

jobs:
  secrets-gate:
    runs-on: ubuntu-latest
    outputs:
      ok: ${{ steps.check-secrets.outputs.ok }}
    steps:
      - name: check for secrets needed to run SonarQube
        id: check-secrets
        run: |
          if [ ! -z "${{ secrets.SONAR_TOKEN }}" ] && [ ! -z "${{ secrets.SONAR_HOST_URL }}" ]; then
            echo "::set-output name=ok::true"
          fi

  sonarqube:
    runs-on: ubuntu-latest
    needs:
      - secrets-gate
    if: ${{ needs.secrets-gate.outputs.ok == 'true' }}
    steps:
      - name: checkout repository 
        uses: actions/checkout@v3
  
      - name: Execute Sonarqube analysis
        run: make sonarqube 

        env:
          REPO_NAME: ${{ github.event.repository.name }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      
      - name: Install xml Parser
        run: npm install dom-parser
    
      - name: Update solution
        if: always()
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const fs = require('fs')
            const DomParser = require('dom-parser')

            var parser = new DomParser()
            const assertionResults = []
            const dirsList = ['Application.E2ETests', 'Domain.UnitTests']
            dirsList.forEach((dir) => {
                parentDir = 'tests/' + dir + '/TestResults/'
                fs.readdirSync(parentDir).forEach((fileName) => {
                    const filePath = parentDir + fileName
                    if (fs.lstatSync(filePath).isDirectory()) {
                        return
                    }
                    const file = fs.readFileSync(filePath)
                    var fileString = file.toString()
                    fileString = fileString.replaceAll("UnitTestResult", "unittestresult") //Crashed with caps
                    const dom = parser.parseFromString(fileString)
                    dom.getElementsByTagName("unittestresult").forEach((testcase) => {
                        testName = testcase.getAttribute("testName")
                        testResult = testcase.getAttribute("outcome")
                        assertionResults.push(testResult === "Passed")
                    })
                })
            })
            console.log(assertionResults)